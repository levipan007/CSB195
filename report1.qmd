---
title: "Report 1"
author: "Yiwei (Levi) Pan"
format:
  html:
    toc: true
    toc-depth: 2
---

# Introduction

Goal: compare the Standard Genetic Code’s point-mutation tolerance score to random genetic codes.

Metric: sum of `aaSim()` similarities across all 1-nt neighbors (benchmark of the standard code = 9856.116).

Two null models: - **Degeneracy-preserving**: shuffle codon→AA assignments but keep codon counts per amino acid and number of stops. - **Cover-only**: ensure all 20 amino acids appear and ≥1 stop; fill remaining codons by sampling from AA set + stop.

# Methods

-   Verified benchmark with `check_benchmark.R` (obtained 9856.116).
-   Simulated N = 10,000 random codes for each model using `random_codes.R`.
-   Wrote results to `./out/random_scores_<model>.csv` (or `./out/random_scores.csv` if filenames weren’t customized).

# Results

```{r}
## Load data

```

```{r}
std_score <- 9856.116

load_scores <- function(model) {
  f1 <- paste0("./out/random_scores_", model, ".csv")  # preferred
  f2 <- "./out/random_scores.csv"                      # fallback
  path <- if (file.exists(f1)) f1 else f2
  dat <- read.csv(path)
  dat$score
}

scores_deg <- load_scores("degeneracy_preserve")
scores_cov <- load_scores("cover_only")

length(scores_deg); length(scores_cov)  # sanity check
```

## Summary table

```{r}
summ <- function(x) {
  c(N = length(x),
    mean = mean(x),
    sd = sd(x),
    p01 = unname(quantile(x, 0.01)),
    p05 = unname(quantile(x, 0.05)),
    p50 = unname(quantile(x, 0.50)),
    p95 = unname(quantile(x, 0.95)),
    p99 = unname(quantile(x, 0.99)),
    prop_ge_standard = mean(x >= std_score))
}

tab <- rbind(
  degeneracy_preserve = summ(scores_deg),
  cover_only          = summ(scores_cov)
)

knitr::kable(round(tab, 3),
             caption = "Random-code score summaries (aaSim sum over all 1-nt neighbors).")
```

## Histograms

```{r}
par(mfrow = c(1,2))

hist(scores_deg, breaks = 60,
     main = "Degeneracy-preserving",
     xlab = "Score (sum of aaSim over neighbors)")
abline(v = std_score, lwd = 3)

hist(scores_cov, breaks = 60,
     main = "Cover-only",
     xlab = "Score (sum of aaSim over neighbors)")
abline(v = std_score, lwd = 3)

par(mfrow = c(1,1))
```

## Density overlay

```{r}
d1 <- density(scores_deg)
d2 <- density(scores_cov)

plot(d1, main = "Random-code score densities",
     xlab = "Score (sum of aaSim over neighbors)")
lines(d2)
abline(v = std_score, lwd = 3)

legend("topright",
       legend = c("degeneracy_preserve","cover_only","standard code"),
       lty = c(1,1,1), lwd = c(1,1,3), bty = "n")
```

## Key numbers

```{r}
cat("Degeneracy-preserving — proportion ≥ standard:",
    mean(scores_deg >= std_score), "\n")

cat("Cover-only — proportion ≥ standard:",
    mean(scores_cov >= std_score), "\n")
```

# Discussion

The results show that the standard genetic code’s score is significantly higher than almost all random codes under both null models. This supports the idea that the genetic code is unusually robust to point mutations compared to random alternatives.

**What we found.**\
Under the **degeneracy-preserving** model (N = `r length(scores_deg)`), mean = `r round(mean(scores_deg),1)`, SD = `r round(sd(scores_deg),1)`.\
Under the **cover-only** model (N = `r length(scores_cov)`), mean = `r round(mean(scores_cov),1)`, SD = `r round(sd(scores_cov),1)`.\
The Standard Genetic Code’s score is `r std_score`. Proportion random ≥ standard:\
- Degeneracy-preserving: `r round(mean(scores_deg >= std_score), 3)`\
- Cover-only: `r round(mean(scores_cov >= std_score), 3)`

These values show that both random distributions sit far to the right of the standard score.

**Model differences.**\
The cover-only distribution is substantially wider than the degeneracy-preserving one, but in both cases the standard score is far in the left tail.

**Interpretation.**\
With this metric (sum of `aaSim()` over 1-nt neighbors), the standard code appears highly non-optimal relative to random codes under both null models.

**Limitations.**\
- Depends on the similarity matrix (`aaSim`) and null model specification.\
- Only single-nucleotide neighbors are considered.\
- Different modeling choices could shift numeric values, though the observed gaps are large.

# Conclusion

-   The standard code’s score (`r std_score`) is **much lower** than almost all random codes under both models.
-   The conclusion is **robust** to the choice of null (degeneracy-preserving vs cover-only).
-   Under these assumptions, the standard code strongly deviates from random expectations.
